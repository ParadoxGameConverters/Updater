name: "Build and test"

on:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, [self-hosted, Linux], [self-hosted, Windows, noramdisk]]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Create and start virtual environment
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          apt install python3-venv
        fi
        python3 -m venv venv
        if [ "$RUNNER_OS" == "Windows" ]; then
          venvironment\Scripts\activate
        else
          source venv/bin/activate
        fi
    - name: "Install requirements"
      run: |
        pip3 install pip-tools
        python3 -m piptools compile -o requirements.txt pyproject.toml
        pip3 install -r requirements.txt
    - name: "Create executable with pyinstaller"
      run: |
        pyinstaller --icon=updater.ico updater.py
    - name: "Check if updater works correctly"
      run: |
        mkdir Release
        mkdir -p Release/Updater
        mv dist/updater/* Release/Updater/
        mkdir -p Release/ImperatorToCK3
        mv Release/Updater Release/Updater-running
        cd Release/Updater-running
        if [ "$RUNNER_OS" == "Windows" ]; then
          ./updater.exe "https://github.com/ParadoxGameConverters/ImperatorToCK3/releases/download/6.1.3/ImperatorToCK3-win-x64.zip" "ImperatorToCK3/"
        elif [ "$RUNNER_OS" == "macOS" ]; then
          ./updater "https://github.com/ParadoxGameConverters/ImperatorToCK3/releases/download/6.1.3/ImperatorToCK3-osx-x64.tgz" "ImperatorToCK3/"
        elif [ "$RUNNER_OS" == "Linux" ]; then
          ./updater "https://github.com/ParadoxGameConverters/ImperatorToCK3/releases/download/6.1.3/ImperatorToCK3-linux-x64.tgz" "ImperatorToCK3/"
        else
          echo "Unknown OS: $RUNNER_OS"
          exit 1
        fi
      shell: bash

